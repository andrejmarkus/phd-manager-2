@using Microsoft.Extensions.Localization
@using PhDManager.Locales
@using PhDManager.Models

@implements IDisposable

@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject IStringLocalizer<Resources> Localizer

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">@Localizer["Home"]</MudNavLink>
    <AuthorizeView Roles="@($"{Admin.Role}")">
        <Authorized>
            <MudNavGroup Title="@Localizer["Admin"]" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AdminPanelSettings" HideExpandIcon>
                <MudNavLink Href="management/migrate-accounts" Icon="@Icons.Material.Filled.SwapHoriz">@Localizer["AccountsMigrate"]</MudNavLink>
                <MudNavLink Href="management/education" Icon="@Icons.Material.Filled.School">@Localizer["Education"]</MudNavLink>
                <MudNavLink Href="management/users" Icon="@Icons.Material.Filled.Group">@Localizer["Users"]</MudNavLink>
                <MudNavLink Href="management/theses" Icon="@Icons.Material.Filled.DocumentScanner">@Localizer["DissertationTheses"]</MudNavLink>
                <MudNavLink Href="management/individual-plans" Icon="@Icons.Material.Filled.ContactPage">@Localizer["IndividualPlans"]</MudNavLink>
                <MudNavLink Href="management/evaluations" Icon="@Icons.Material.Filled.ListAlt">@Localizer["Evaluations"]</MudNavLink>
            </MudNavGroup>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Roles="@($"{Teacher.Role}")">
        <Authorized>
            <MudNavGroup Title="@Localizer["Teacher"]" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AdminPanelSettings" HideExpandIcon>
                <MudNavLink Href="management/theses" Icon="@Icons.Material.Filled.DocumentScanner">@Localizer["DissertationTheses"]</MudNavLink>
                <MudNavLink Href="management/individual-plans" Icon="@Icons.Material.Filled.ContactPage">@Localizer["IndividualPlans"]</MudNavLink>
                <MudNavLink Href="management/evaluations" Icon="@Icons.Material.Filled.ListAlt">@Localizer["Evaluations"]</MudNavLink>
            </MudNavGroup>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Roles="@($"{Student.Role}")">
        <Authorized>
            <MudNavLink Href="individual-plan" Icon="@Icons.Material.Filled.ContactPage">@Localizer["IndividualPlan"]</MudNavLink>
            <MudNavLink Href="applications" Icon="@Icons.Material.Filled.ListAlt">@Localizer["Applications"]</MudNavLink>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView Roles="@($"{External.Role}")">
        <Authorized>
            <MudNavLink Href="management/theses/review" Icon="@Icons.Material.Filled.DocumentScanner">@Localizer["DissertationThesisPending"]</MudNavLink>
        </Authorized>
    </AuthorizeView>
    <MudNavLink Href="theses" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">@Localizer["DissertationTheses"]</MudNavLink>
    <MudNavLink Href="auth" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Lock">@Localizer["LoginRequired"]</MudNavLink>
    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="Account/Manage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">@context.User.Identity?.Name</MudNavLink>
            <MudNavLink OnClick="Logout" IconColor="Color.Error" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Logout">@Localizer["SignOut"]</MudNavLink>

            <form id="logoutForm" action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
            </form>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Href="Account/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Password">@Localizer["SignIn"]</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("logout");
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}


