@page "/individual-plan"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using PhDManager.Data
@using PhDManager.Locales
@using PhDManager.Models
@using PhDManager.Models.Enums
@using PhDManager.Models.Roles
@using PhDManager.Services
@using PhDManager.Services.IRepositories

@inject IUnitOfWork UnitOfWork
@inject IStringLocalizer<Resources> Localizer
@inject UsersService UsersService

@attribute [Authorize(Roles = $"{Student.Role}")]

<PageTitle>@Localizer["IndividualPlan"]</PageTitle>

@if (_individualPlan is not null && _individualPlan.Student?.Thesis is not null)
{
    <MudText Align="Align.Center" Typo="Typo.h4">@Localizer["IndividualPlan"]</MudText>
    <MudStack Spacing="5">
        <MudStack>
            <MudText Typo="Typo.h5">@Localizer["DissertationThesis"]</MudText>
            <MudLink Href="@($"/theses/{_individualPlan.Student.Thesis.Guid}")">@_individualPlan.Student.Thesis.Title</MudLink>
            <MudStack Row>
                <MudText><b>@Localizer["Supervisor"]:</b></MudText>
                <MudText>@_individualPlan.Student.Thesis.Supervisor.User.DisplayName</MudText>
            </MudStack>
        </MudStack>
        <MudStack>
            <MudText Typo="Typo.h5">@Localizer["Deadlines"]</MudText>
            <MudGrid>
                <MudItem xs="6">
                    <MudText>@Localizer["IndividualPlanDissertationExamDateInfo"]:</MudText>
                </MudItem>
                <MudItem xs="6">
                    <MudText><b>@(_individualPlan.DissertationApplicationDate?.ToString("dd.MM.yyyy"))</b></MudText>
                </MudItem>
                <MudItem xs="6">
                    <MudText>@Localizer["IndividualPlanDissertationSubmissionDateInfo"]:</MudText>
                </MudItem>
                <MudItem xs="6">
                    <MudText><b>@(_individualPlan.DissertationSubmissionDate?.ToString("MMMM yyyy"))</b></MudText>
                </MudItem>
                <MudItem xs="6">
                    <MudText>@Localizer["IndividualPlanStudyEndDateInfo"]:</MudText>
                </MudItem>
                <MudItem xs="6">
                    <MudText><b>@(_individualPlan.StudyEndDate?.ToString("dd.MM.yyyy"))</b></MudText>
                </MudItem>
            </MudGrid>
        </MudStack>
        <MudStack>
            <MudText Typo="Typo.h5">@Localizer["StudyPart"]</MudText>
            <MudStack>
                <MudText Typo="Typo.h6">@Localizer["IndividualPlanSubjectsInfo"]: </MudText>
                @foreach (var subject in _individualPlan.Subjects.Where(s => s.RequirementLevel == RequirementLevel.Compulsory))
                {
                    <MudText>@subject.Name</MudText>
                }
                <MudText Typo="Typo.h6">@Localizer["IndividualPlanAdditionalSubjectsInfo"]: </MudText>
                @foreach (var subject in _individualPlan.Subjects.Where(s => s.RequirementLevel != RequirementLevel.Compulsory))
                {
                    <MudText>@subject.Name</MudText>
                }
            </MudStack>
            <MudStack>
                <MudText><b>@Localizer["IndividualPlanWrittenThesisInfo"]</b></MudText>
                <MudText>@_individualPlan.WrittenThesisTitle</MudText>
            </MudStack>
            <MudStack>
                <MudText><b>@Localizer["IndividualPlanWrittenThesisRequiredLiterature"]</b></MudText>
                <MudText>@_individualPlan.WrittenThesisRecommendedLiterature</MudText>
            </MudStack>
            <MudStack>
                <MudText><b>@Localizer["IndividualPlanWrittenThesisRecommendedLiterature"]</b></MudText>
                <MudText>@_individualPlan.WrittenThesisRecommendedLiterature</MudText>
            </MudStack>
            <MudStack>
                <MudText><b>@Localizer["IndividualPlanWrittenThesisRecommendedLectures"]</b></MudText>
                <MudText>@_individualPlan.WrittenThesisRecommendedLectures</MudText>
            </MudStack>
        </MudStack>
        <MudStack>
            <MudText Typo="Typo.h5">@Localizer["ScientificPart"]</MudText>
            <MudStack>
                <MudText><b>@Localizer["IndividualPlanThesis"]</b></MudText>
                <MudText>@_individualPlan.Student.Thesis?.Title</MudText>
            </MudStack>
            <MudStack>
                <MudText><b>@Localizer["IndividualThesisResearchTask"]</b></MudText>
                <MudText>@_individualPlan.Student.Thesis?.ResearchTask</MudText>
            </MudStack>
            <MudStack>
                <MudText><b>@Localizer["IndividualPlanSolutionResults"]</b></MudText>
                <MudText>@_individualPlan.Student.Thesis?.SolutionResults</MudText>
            </MudStack>
            <MudStack>
                <MudStack Row>
                    <MudText Typo="Typo.h6">@Localizer["IndividualPlanSolvingProcedure"]</MudText>
                    <MudSpacer />
                    <MudText Typo="Typo.h6">@Localizer["IndividualPlanDeadline"]</MudText>
                </MudStack>
                <MudStack>
                    @foreach (var task in _individualPlan.Tasks.Select((e, i) => new { Element = e, Index = i }))
                    {
                        <MudStack Row>
                            <MudText>@task.Element</MudText>
                            <MudSpacer />
                            <MudText>@_individualPlan.TaskDeadlines[task.Index]?.ToString("MMMM yyyy")</MudText>
                        </MudStack>
                    }
                </MudStack>
            </MudStack>
        </MudStack>
    </MudStack>
}
else
{
    <MudText>@Localizer["IndividualPlanMissing"]</MudText>
}

@code {
    private IndividualPlan? _individualPlan;

    protected override async Task OnInitializedAsync()
    {
        var currentUserId = await UsersService.GetCurrentUserIdAsync();
        if (currentUserId is not null)
        {
            _individualPlan = await UnitOfWork.IndividualPlans.GetByUserIdAsync(currentUserId);
        }
    }
}
