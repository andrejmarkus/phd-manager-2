@page "/theses/{ThesisGuid}"

@using Microsoft.AspNetCore.Identity
@using PhDManager.Data
@using PhDManager.Models
@using PhDManager.Services
@using PhDManager.Services.IRepositories

@inject IUnitOfWork UnitOfWork
@inject UserManager<ApplicationUser> UserManager
@inject UsersService UsersService
@inject NavigationManager NavigationManager

<PageTitle>Thesis</PageTitle>

@if (_thesis is not null)
{
    <MudContainer>
        <div>
            <MudText Typo="Typo.h5">Názov témy dizertačnej práce</MudText>
            <MudText Typo="Typo.body1">@_thesis.Title</MudText>
        </div>
        @if (_thesis.TitleEnglish is not null)
        {
            <div>
                <MudText Typo="Typo.h5">Title of the dissertation thesis</MudText>
                <MudText Typo="Typo.body1">@_thesis.TitleEnglish</MudText>
            </div>
        }
        <div>
            <MudText Typo="Typo.h5">Školiteľ</MudText>
            <MudText Typo="Typo.body1">@_supervisor.DisplayName</MudText>
        </div>
        <div>
            <MudText Typo="Typo.h5">Študijný odbor</MudText>
            <MudText Typo="Typo.body1">@_studyProgram.Name</MudText>
        </div>
        <div>
            <MudText Typo="Typo.h5">Detailnejší opis problému</MudText>
            <MudText Typo="Typo.body1">@_thesis.Description</MudText>
        </div>
        @if (_thesis.DescriptionEnglish is not null)
        {
            <div>
                <MudText Typo="Typo.h5">Detailed description of the problem</MudText>
                <MudText Typo="Typo.body1">@_thesis.DescriptionEnglish</MudText>
            </div>
        }
        <div>
            <MudText Typo="Typo.h5">Predpokladaný vedecký prínos</MudText>
            <MudText Typo="Typo.body1">@_thesis.ScientificContribution</MudText>
        </div>
        <div>
            <MudText Typo="Typo.h5">Odporučány postup vedeckého bádania</MudText>
            <MudText Typo="Typo.body1">@_thesis.ScientificProgress</MudText>
        </div>
        <div>
            <MudText Typo="Typo.h5">Druh výskumu</MudText>
            <MudText Typo="Typo.body1">@_thesis.ResearchType</MudText>
        </div>
        <div>
            <MudText Typo="Typo.h5">Výskumná úloha, ktorej súčasťou bude riešená téma</MudText>
            <MudText Typo="Typo.body1">@_thesis.ResearchTask</MudText>
        </div>
        <div>
            <MudText Typo="Typo.h5">Doterajšie výsledky riešenia na školiacom pracovisku, vrátane odkazov na dostupné zdroje</MudText>
            <MudText Typo="Typo.body1">@_thesis.SolutionResults</MudText>
        </div>
        <AuthorizeView Roles="Admin, Teacher">
            <Authorized>
                <div class="d-flex gap-1">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="@($"/theses/{_thesis.Guid}/edit")">Edit</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@(() => DeleteThesis(_thesis.Id))">Delete</MudButton>
                </div>
            </Authorized>
        </AuthorizeView>
    </MudContainer>
    @if (!_thesis.IsApproved)
    {
        <AuthorizeView Roles="Admin, Teacher, Reviewer">
            <Authorized>
                <MudContainer>
                    @if (_comments is not null) {
                        @foreach (var comment in _thesis.Comments)
                        {
                            <MudPaper Class="pa-2">
                                    <MudText Typo="Typo.h6">@comment.Reviewer.DisplayName</MudText>
                                    <MudText Typo="Typo.body1">@comment.Text</MudText>
                            </MudPaper>
                        }
                    }
                    <AuthorizeView Roles="Reviewer" Context="reviewerContext">
                        <Authorized>
                            <MudTextField @bind-Value="_commentText" Label="Comment" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Send" OnAdornmentClick="PostComment"></MudTextField>
                        </Authorized>
                    </AuthorizeView>
                </MudContainer>
            </Authorized>
        </AuthorizeView>
    }
}

@code {
    [Parameter]
    public string ThesisGuid { get; set; }

    private Thesis _thesis;
    private ApplicationUser _supervisor;
    private StudyProgram _studyProgram;
    private IEnumerable<Comment>? _comments;

    private string _commentText;

    protected override async Task OnInitializedAsync()
    {
        // TODO: Make model return supervisor, study program, comments
        _thesis = await UnitOfWork.Theses.GetByGuidAsync(ThesisGuid);
        _supervisor = await UserManager.FindByIdAsync(_thesis.SupervisorId);
        _studyProgram = await UnitOfWork.StudyPrograms.GetByIdAsync(_thesis.StudyProgramId);
        _comments = await UnitOfWork.Comments.GetAllByThesisAsync(_thesis.Id);
    }

    private async Task PostComment()
    {
        Comment comment = new Comment
        {
            Text = _commentText,
            ThesisId = _thesis.Id,
            ReviewerId = await UsersService.GetCurrentUserIdAsync()
        };
        await UnitOfWork.Comments.AddAsync(comment);
        await UnitOfWork.CompleteAsync();
    }

    private async Task DeleteThesis(int id)
    {
        await UnitOfWork.Theses.DeleteAsync(id);
        await UnitOfWork.CompleteAsync();
        NavigationManager.NavigateTo("/theses");
    }

    private async Task UpdateComment(Comment comment)
    {
        await UnitOfWork.Comments.UpdateAsync(comment.Id, comment);
        await UnitOfWork.CompleteAsync();
    }

}