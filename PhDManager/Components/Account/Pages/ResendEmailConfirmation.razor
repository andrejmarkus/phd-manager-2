@page "/Account/ResendEmailConfirmation"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Extensions.Localization
@using PhDManager.Data
@using PhDManager.Locales

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject IStringLocalizer<Resources> Localizer

<PageTitle>@Localizer["EmailResend"]</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">@Localizer["EmailResend"]</MudText>

<MudText Typo="Typo.body1" GutterBottom="true">@Localizer["EmailEnter"]</MudText>

<StatusMessage Message="@message" />

<EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
    <DataAnnotationsValidator />

    <MudGrid>
        <MudItem md="12">
            <MudStaticTextField For="@(() => Input.Email)" @bind-Value="Input.Email"
                                Label="@Localizer["Email"]" Placeholder="@Localizer["Email"]"
                                UserAttributes="@(new() { { "autocomplete", "true" }, { "aria-required", "true" } } )"
                                Variant="Variant.Outlined" />
        </MudItem>
        <MudItem md="12">
            <MudStaticButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" FormAction="FormAction.Submit">@Localizer["Resend"]</MudStaticButton>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private string? message;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null || !user.IsExternal)
        {
            message = Localizer["EmailResendMessage"];
            return;
        }

        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });
        await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        message = Localizer["EmailResendMessage"];
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
