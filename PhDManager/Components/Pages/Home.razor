@page "/"
@using Microsoft.Extensions.Localization
@using PhDManager.Components.Layout
@using PhDManager.Data
@using PhDManager.Locales
@using PhDManager.Models
@using PhDManager.Models.Roles
@using PhDManager.Services
@using PhDManager.Services.IRepositories

@rendermode InteractiveServer

@inject IStringLocalizer<Resources> Localizer
@inject IUnitOfWork UnitOfWork
@inject NavigationManager NavigationManager
@inject UsersService UsersService

<PageTitle>@Localizer["Home"]</PageTitle>

<MudStack class="height-screen" StretchItems="StretchItems.Middle">
    <AuthorizeView>
        <Authorized>
            <MudStack Class="height-full" Justify="Justify.Center" AlignItems="AlignItems.Center">
                <MudText Class="text-rotate text-center" Typo="Typo.h3">@Localizer["Welcome"], @context.User.Identity?.Name</MudText>
                <MudText>@Localizer["NavigationInfo"]</MudText>
                <AuthorizeView Roles="@($"{Student.Role}")" Context="studentContext">
                    @if (_currentStudent is not null)
                    {
                        <MudStack Class="mt-3">
                            @if (_currentStudent.Thesis is not null)
                            {
                                <MudText>
                                    @Localizer["ThesisStudentInfo"] 
                                    <MudLink Href="@($"/theses/{_currentStudent.Thesis.Guid}")">@_currentStudent.Thesis.Title</MudLink>
                                </MudText>
                            }
                            @if (_currentStudent.ThesisInterest is not null)
                            {
                                <MudText>
                                    @Localizer["ThesisStudentInterestInfo"] 
                                    <MudLink Href="@($"/theses/{_currentStudent.ThesisInterest.Guid}")">@_currentStudent.ThesisInterest.Title</MudLink>
                                </MudText>
                            }
                        </MudStack>
                    }
                </AuthorizeView>
            </MudStack>
        </Authorized>
        <NotAuthorized>
            <div class="full-size responsive-row">
                <MudStack Spacing="1">
                    <MudText Typo="Typo.h3"><span class="underline">@Localizer["HomeHeading"]</span></MudText>
                    <MudText Typo="Typo.h5">@Localizer["HomeSubheading"]</MudText>
                    <div class="responsive-row">
                        <MudButton Size="Size.Large" Class="mr-2 button-shake" Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => NavigationManager.NavigateTo("Account/Login"))">@Localizer["SignIn"]</MudButton>
                        <MudButton Size="Size.Large" Class="button-shake" Variant="Variant.Filled" Color="Color.Info" OnClick="@(() => NavigationManager.NavigateTo("theses"))">@Localizer["FindThesis"]</MudButton>
                    </div>
                </MudStack>
                <div class="container-image landing-basis">
                    <div class="circle-image"></div>
                    <MudImage Class="full-size landing-image" Src="@Assets["digital-nomad.svg"]" />
                </div>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</MudStack>

@code {
    private Student? _currentStudent;

    protected override async Task OnInitializedAsync()
    {
        var currentUserId = await UsersService.GetCurrentUserIdAsync();
        _currentStudent = await UnitOfWork.Students.GetByUserIdAsync(currentUserId);
    }
}