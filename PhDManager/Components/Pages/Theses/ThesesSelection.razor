@page "/theses"

@using Microsoft.AspNetCore.Authorization
@using PhDManager.Models
@using PhDManager.Services.IRepositories

@inject IUnitOfWork UnitOfWork

<PageTitle>Theses</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Theses</MudText>

<div class="d-flex justify-space-between">
    <MudText Typo="Typo.h6">Theses</MudText>
    <AuthorizeView Roles="Teacher, Admin">
        <Authorized>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/theses/add">Add thesis</MudButton>
        </Authorized>
    </AuthorizeView>
</div>
<MudGrid Justify="Justify.Center">
    @if (Theses is not null)
    {
        @foreach (var thesis in Theses)
        {
            <MudItem xs="12" md="6">
                <MudPaper>
                    <MudText Typo="Typo.h6">@thesis.Title</MudText>
                    <MudText Typo="Typo.body2">@thesis.Description</MudText>
                </MudPaper>
            </MudItem>
        }
    }
</MudGrid>

@code {
    IEnumerable<Thesis>? Theses;

    protected override async Task OnInitializedAsync()
    {
        Theses = await UnitOfWork.Theses.GetAllAsync();
    }
}
